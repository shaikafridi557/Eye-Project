/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./sass/admin/js/free/admin.js":
/*!*************************************!*\
  !*** ./sass/admin/js/free/admin.js ***!
  \*************************************/
/***/ (() => {

eval("(function ($) {\n\n    $(document).ready(function () {\n\n        // Create an instance of Notyf\n        const notyf = new Notyf({\n            ripple: true,\n            dismissable: true,\n            duration: 3000,\n            position: {\n                x: 'right',\n                y: 'bottom',\n            },\n        });\n\n\n        /**\n         * Delete old review fields\n         * @author kabir, fida\n         */\n        $(document).on('click', '.tf-del-old-review-fields', function (e) {\n            e.preventDefault();\n            var $this = $(this);\n            var data = {\n                action: 'tf_delete_old_review_fields',\n                deleteAll: $(this).data('delete-all')\n            };\n\n            $.ajax({\n                type: 'post',\n                url: uacf7_admin_params.ajax_url,\n                data: data,\n                beforeSend: function (data) {\n                    notyf.success(uacf7_admin_params.deleting_old_review_fields);\n                },\n                success: function (data) {\n                    notyf.success(data.data);\n                },\n                error: function (data) {\n                    notyf.error(data.data);\n                },\n\n            });\n\n        });\n\n        /**\n         * Delete room order ids\n         * @author fida\n         */\n        $(document).on('click', '.remove-order-ids', function (e) {\n\n            e.preventDefault();\n\n            var $this = $(this);\n            var post_id = $(\"#post_ID\").val();\n            var meta_field = $this.closest('.tf-repeater-content-wrap').find('.tf-order_id input').attr('name');\n            var data = {\n                action: 'tf_remove_room_order_ids',\n                meta_field: meta_field,\n                post_id: post_id,\n            };\n\n            $.ajax({\n                type: 'post',\n                url: ajaxurl,\n                data: data,\n                beforeSend: function (data) {\n                    notyf.success(uacf7_admin_params.deleting_room_order_ids);\n                },\n                success: function (data) {\n                    notyf.success(data.data);\n                    location.reload();\n                },\n                error: function (data) {\n                    notyf.error(data.data);\n                },\n            });\n\n        });\n\n        /**\n         * Tour location required\n         *\n         * show notyf error\n         */\n        $(document).on('click', '.post-type-tf_tours #publish, .post-type-tf_tours #save-post', function (e) {\n            if ($('textarea[name=\"tf_tours_opt[text_location]\"]').val().length === 0) {\n                e.preventDefault;\n                e.stopImmediatePropagation();\n                notyf.error(uacf7_admin_params.tour_location_required);\n                return false;\n            }\n        });\n\n        /**\n         * Hotel location required\n         *\n         * show notyf error\n         */\n        $(document).on('click', '.post-type-tf_hotel #publish, .post-type-tf_hotel #save-post', function (e) {\n            if ($('textarea[name=\"tf_hotels_opt[address]\"]').val().length === 0) {\n                e.preventDefault;\n                e.stopImmediatePropagation();\n                notyf.error(uacf7_admin_params.hotel_location_required);\n                return false;\n            }\n        });\n\n        /**\n         * Apartment location required\n         *\n         * show notyf error\n         */\n        $(document).on('click', '.post-type-tf_apartment #publish, .post-type-tf_apartment #save-post', function (e) {\n            if ($('[name=\"tf_apartment_opt[address]\"]').val().length === 0) {\n                e.preventDefault;\n                e.stopImmediatePropagation();\n                notyf.error(uacf7_admin_params.apartment_location_required);\n                return false;\n            }\n        });\n\n        /**\n         * Ajax install\n         *\n         * @since 1.0\n         */\n        $(document).on('click', '.tf-install', function (e) {\n            e.preventDefault();\n\n            var current = $(this);\n            var plugin_slug = current.attr(\"data-plugin-slug\");\n\n            current.addClass('updating-message').text(uacf7_admin_params.installing);\n\n            var data = {\n                action: 'tf_ajax_install_plugin',\n                _ajax_nonce: uacf7_admin_params.tf_nonce,\n                slug: plugin_slug,\n            };\n\n            jQuery.post(uacf7_admin_params.ajax_url, data, function (response) {\n                current.removeClass('updating-message');\n                current.addClass('updated-message').text(uacf7_admin_params.installed);\n                current.attr(\"href\", response.data.activateUrl);\n            })\n                .fail(function () {\n                    current.removeClass('updating-message').text(uacf7_admin_params.install_failed);\n                })\n                .always(function () {\n                    current.removeClass('install-now updated-message').addClass('activate-now button-primary').text(tf_admin_params.activating);\n                    current.unbind(e);\n                    current[0].click();\n                });\n        });\n\n        /**\n         * Pro Feature button link\n         */\n        $(document).on('click', '.tf-pro', function (e) {\n            e.preventDefault();\n            window.open('https://cf7addons.com/');\n        });\n\n        $(window).on('load', function () {\n            $('.tf-field-disable').find('input, select, textarea, button, div, span').attr('disabled', 'disabled');\n        });\n\n        $(document).on('click', '.tf-field-pro', function (e) {\n            e.preventDefault();\n            window.open('https://cf7addons.com/');\n        });\n\n        /**\n         * Generate & set unique id for hotel rooms\n         */\n        $(document).on('click', '.room-repeater > div.csf-fieldset > a.csf-repeater-add', function (e) {\n\n            var repeaterNumber = $('.room-repeater .csf-repeater-wrapper [data-depend-id=\"room\"]').length - 2;\n\n            $('.room-repeater .unique-id input').each(function () {\n                repeaterNumber++;\n                if ($('.room-repeater [data-depend-id=\"room\"] [data-depend-id=\"unique_id\"]').val().length === 0) {\n                    $('.room-repeater [name=\"tf_hotel[room][' + repeaterNumber + '][unique_id]\"]').val(new Date().valueOf() + repeaterNumber);\n                }\n            });\n\n        });\n\n        //documentation link open in new tab\n        $('.tf-go-docs').parent().attr('target', '_blank');\n\n        /*\n        * Author @Jahid\n        * Tour Booking Status\n        */\n\n        $('.tf-ticket-status').click(function () {\n            if ($(this).is(':checked')) {\n                var order_unique_id = $(this).val();\n                $(\"#tf-booking-status-loader\").addClass('show');\n                jQuery.ajax({\n                    type: 'post',\n                    url: uacf7_admin_params.ajax_url,\n                    data: {\n                        action: 'tf_ticket_status_change',\n                        status: \"check in\",\n                        order_unique_id: order_unique_id,\n                    },\n                    success: function (data) {\n                        $(\"#tf-booking-status-loader\").removeClass('show');\n                    }\n                });\n            } else {\n                var order_unique_id = $(this).val();\n                $(\"#tf-booking-status-loader\").addClass('show');\n                jQuery.ajax({\n                    type: 'post',\n                    url: uacf7_admin_params.ajax_url,\n                    data: {\n                        action: 'tf_ticket_status_change',\n                        status: \"\",\n                        order_unique_id: order_unique_id,\n                    },\n                    success: function (data) {\n                        $(\"#tf-booking-status-loader\").removeClass('show');\n                    }\n                });\n            }\n        });\n    });\n\n})(jQuery);\n\n//# sourceURL=webpack://uacf7/./sass/admin/js/free/admin.js?");

/***/ }),

/***/ "./sass/admin/js/free/required-taxonomies-gutenberg.js":
/*!*************************************************************!*\
  !*** ./sass/admin/js/free/required-taxonomies-gutenberg.js ***!
  \*************************************************************/
/***/ (() => {

eval("const {select, dispatch} = wp.data;\n\n//required taxonomies\n\nfunction TfPrePublishCheck() {\n    let lockPost = false;\n    uacf7_admin_params.error = false;\n    uacf7_admin_params.messages = [];\n\n    let tf_post_pre_save = Object.assign({}, select('core/editor').getCurrentPost(), select('core/editor').getPostEdits());\n\n    if (tf_post_pre_save.hasOwnProperty('categories')) {\n        tf_post_pre_save['categories'] = tf_post_pre_save['categories'].filter(function (ele) {\n            return ele !== 1;\n        });\n    }\n\n    jQuery.each(uacf7_admin_params.taxonomies, function (taxonomy, config) {\n        if (tf_post_pre_save.hasOwnProperty(taxonomy) && tf_post_pre_save[taxonomy].length === 0) {\n            dispatch('core/notices').createNotice(\n                'error',\n                config.message,\n                {\n                    id: 'tfNotice_' + taxonomy,\n                    isDismissible: false\n                }\n            );\n            uacf7_admin_params.error = lockPost = true;\n        }else{\n            dispatch('core/notices').removeNotice('tfNotice_' + taxonomy);\n        }\n    });\n\n    if (lockPost === true) {\n        dispatch('core/editor').lockPostSaving();\n    } else {\n        dispatch('core/editor').unlockPostSaving();\n    }\n\n}\n\nTfPrePublishCheck();\n\nlet rpc_check_interval = setInterval(TfPrePublishCheck, 500);\n\n\n//# sourceURL=webpack://uacf7/./sass/admin/js/free/required-taxonomies-gutenberg.js?");

/***/ }),

/***/ "./sass/admin/js/free/required-taxonomies.js":
/*!***************************************************!*\
  !*** ./sass/admin/js/free/required-taxonomies.js ***!
  \***************************************************/
/***/ (() => {

eval("jQuery(function ($) {\n\n    //required taxonomies\n\t// Create an instance of Notyf\n\tconst notyf = new Notyf({\n\t\tripple: true,\n\t\tdismissable: true,\n\t\tduration: 3000,\n\t\tposition: {\n\t\t\tx: 'right',\n\t\t\ty: 'bottom',\n\t\t},\n\t});\n\n    function tf_event_handler(e) {\n        uacf7_admin_params.error = false;\n        $.each(uacf7_admin_params.taxonomies, function (taxonomy, config) {\n            if (config.type == 'hierarchical') {\n                if ($('#taxonomy-' + taxonomy + ' input:checked').length == 0) {\n                    //alert(config.message);\n\t\t\t\t\tnotyf.error(config.message);\n                    uacf7_admin_params.error = true;\n                }\n            } else {\n                if ($('#tagsdiv-' + taxonomy + ' .tagchecklist').is(':empty')) {\n                    //alert(config.message);\n                    notyf.error(config.message);\n                    uacf7_admin_params.error = true;\n                }\n            }\n        });\n        if (uacf7_admin_params.error) {\n            e.stopImmediatePropagation();\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    $('#publish, #save-post').on('click.require-post-category', tf_event_handler);\n    $('#post').on('submit.require-post-category', tf_event_handler);\n    if ($('#publish')[0] != null && $._data($('#publish')[0], \"events\") != null) {\n        var publish_click_events = $._data($('#publish')[0], \"events\").click;\n        if (publish_click_events) {\n            if (publish_click_events.length > 1) {\n                publish_click_events.unshift(publish_click_events.pop());\n            }\n        }\n    }\n    if ($('#save-post')[0] != null && $._data($('#save-post')[0], \"events\") != null) {\n        var save_click_events = $._data($('#save-post')[0], \"events\").click;\n        if (save_click_events) {\n            if (save_click_events.length > 1) {\n                save_click_events.unshift(save_click_events.pop());\n            }\n        }\n    }\n    if ($('#post')[0] != null && $._data($('#post')[0], \"events\") != null) {\n        var post_submit_events = $._data($('#post')[0], \"events\").submit;\n        if (post_submit_events) {\n            if (post_submit_events.length > 1) {\n                post_submit_events.unshift(post_submit_events.pop());\n            }\n        }\n    }\n});\n\n//# sourceURL=webpack://uacf7/./sass/admin/js/free/required-taxonomies.js?");

/***/ }),

/***/ "./sass/admin/js/free/setup-wizard.js":
/*!********************************************!*\
  !*** ./sass/admin/js/free/setup-wizard.js ***!
  \********************************************/
/***/ (() => {

eval("(function ($) {\n    $(document).ready(function () {\n        var uacf_quick_preloader = `<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"margin: auto; background: none; display: block; shape-rendering: auto;\" width=\"20x\" height=\"20px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n        <path d=\"M10 50A40 40 0 0 0 90 50A40 42 0 0 1 10 50\" fill=\"#ffffff\" stroke=\"none\">\n          <animateTransform attributeName=\"transform\" type=\"rotate\" dur=\"1s\" repeatCount=\"indefinite\" keyTimes=\"0;1\" values=\"0 50 51;360 50 51\"></animateTransform>\n        </path>`;\n\n        // One Click CF7 Plugin install and activate\n        $(document).on('click', '.required-plugin-button', function () {  \n            var plugin_status = $(this).attr('data-plugin-status');\n           if(plugin_status == 'not_installed'){\n                var plugin_slug = 'contact-form-7'; \n                var button = $(this);\n                button.html('Installing...' ); \n                $.ajax({\n                    url: uacf7_admin_params.ajax_url,\n                    type: 'post',\n                    data: {\n                        action: 'contact_form_7_ajax_install_plugin', \n                        _ajax_nonce: uacf7_admin_params.uacf7_nonce,\n                        slug: plugin_slug, \n                    },\n                    success: function (response) {\n                        $('.required-plugin-button').attr('data-plugin-status', 'not_active');\n                        uacf7_onclick_ajax_activate_plugin()\n                    }\n                }); \n           }else if(plugin_status ==  'not_active'){\n                \n                uacf7_onclick_ajax_activate_plugin();\n           }\n \n        });\n\n        function uacf7_onclick_ajax_activate_plugin(){\n            var button = $('.required-plugin-button');\n            var plugin_slug = 'contact-form-7';\n            var file_name = 'wp-contact-form-7';\n            button.html('Activating...'); \n            $.ajax({\n                url: uacf7_admin_params.ajax_url,\n                type: 'post',\n                data: {\n                    action: 'uacf7_onclick_ajax_activate_plugin', \n                    _ajax_nonce: uacf7_admin_params.uacf7_nonce,\n                    slug: plugin_slug, \n                    file_name: file_name, \n                },\n                success: function (response) { \n                    button.html('Activated');\n                    $('.required-plugin-button').attr('data-plugin-status', 'activate');\n                    $('.required-plugin-button').attr('disabled', true);\n                    $('.required-plugin-button').addClass('disabled');\n                    $('.uacf7-next').attr('disabled', false);\n                    $('.uacf7-next').removeClass('disabled');\n                    $('.uacf7-next').trigger('click');\n                }\n            });\n        }\n\n\n        // select 2\n        $('#select2').select2({\n            placeholder: 'Select a form type',\n            allowClear: true,\n            width: '100%',\n            minimumResultsForSearch: -1,\n        });\n \n        // Uacf7 Next Button\n        $(document).on('click', '.uacf7-next', function (e) {  \n             \n            var $this = $(this);\n            var current_step = $this.attr('data-current-step'); \n            var next_step = $this.attr('data-next-step');\n            $('.uacf7-single-step-content[data-step='+current_step+']').removeClass('active');\n            $('.uacf7-single-step-content[data-step='+next_step+']').addClass('active');\n            $('.uacf7-single-step-item[data-step='+next_step+']').addClass('active');\n            $('.uacf7-single-step-item[data-step='+current_step+'] .step-item-dots').html( `<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.0965 7.39016L9.9365 14.3002L8.0365 12.2702C7.6865 11.9402 7.1365 11.9202 6.7365 12.2002C6.3465 12.4902 6.2365 13.0002 6.4765 13.4102L8.7265 17.0702C8.9465 17.4102 9.3265 17.6202 9.7565 17.6202C10.1665 17.6202 10.5565 17.4102 10.7765 17.0702C11.1365 16.6002 18.0065 8.41016 18.0065 8.41016C18.9065 7.49016 17.8165 6.68016 17.0965 7.38016V7.39016Z\" fill=\"#7F56D9\"/>\n            </svg> `);\n            $('.uacf7-single-step-item[data-step='+next_step+'] .step-item-dots').html( `<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect width=\"24\" height=\"24\" rx=\"12\" fill=\"#F9F5FF\"/>\n            <circle cx=\"12\" cy=\"12\" r=\"4\" fill=\"#7F56D9\"/>\n            </svg>  `);\n            $this.attr('data-current-step', next_step);\n            $this.attr('data-next-step',  parseInt(next_step) + 1);\n\n            if(current_step == '2'){ \n              $this.hide();\n              $this.addClass('skip');\n              // only replace next to skip without svg icon\n              $this.html('Skip' + `<svg width=\"14\" height=\"10\" viewBox=\"0 0 14 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M12.3337 4.99951L1.66699 4.99951\" stroke=\"white\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              <path d=\"M9.00051 8.33317C9.00051 8.33317 12.3338 5.87821 12.3338 4.99981C12.3338 4.12141 9.00049 1.6665 9.00049 1.6665\" stroke=\"white\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>`); \n              // $(\".tf-option-form.tf-ajax-save\").submit();\n                  \n             }else{\n              $this.show();\n              $this.removeClass('skip');\n              // only replace next to skip without svg icon\n              $this.html('Next' + `<svg width=\"14\" height=\"10\" viewBox=\"0 0 14 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M12.3337 4.99951L1.66699 4.99951\" stroke=\"white\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                <path d=\"M9.00051 8.33317C9.00051 8.33317 12.3338 5.87821 12.3338 4.99981C12.3338 4.12141 9.00049 1.6665 9.00049 1.6665\" stroke=\"white\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              </svg>`); \n             }\n            \n\n \n        });\n\n\n        // Uacf7 Create Form\n        $(document).on('change', '#uacf7-select-form', function (e) {\n            if($(this).val() != ''){\n                $('.uacf7-generate-form').show();\n            }else{\n                $('.uacf7-generate-form').hide();\n            }\n        });\n\n        // Uacf7 Create Form\n        $(document).on('click', '.uacf7-create-form', function (e) {\n            e.preventDefault(); \n            var $this = $(this);\n            var form_name = $('#uacf7-select-form').val();  \n            var form_value = $('#uacf7_ai_code_content').val();   \n            if(form_name.length <= 1){\n              alert('Please select form type');\n              return false;\n            }\n             \n            $.ajax({\n              url: uacf7_admin_params.ajax_url,\n              type: 'post',\n              data: {\n                action: 'uacf7_form_quick_create_form', \n                form_name: form_name, \n                form_value: form_value, \n                _ajax_nonce: uacf7_admin_params.uacf7_nonce,\n              },\n              success: function (data) { \n                if(data.status == 'success'){\n                  // redirect to edit page\n                  window.location.href = data.edit_url; \n                }else{\n                  console.log(data.message)\n                }\n              }\n            }); \n        });\n\n        // Uacf7 Generate Form\n        $(document).on('click', '.uacf7-generate-form', function (e) {\n            e.preventDefault(); \n            $('.uacf7-single-step-item.step-last').addClass('active');\n            $('.uacf7-single-step-item[data-step=\"3\"] .step-item-dots').html(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.0965 7.39016L9.9365 14.3002L8.0365 12.2702C7.6865 11.9402 7.1365 11.9202 6.7365 12.2002C6.3465 12.4902 6.2365 13.0002 6.4765 13.4102L8.7265 17.0702C8.9465 17.4102 9.3265 17.6202 9.7565 17.6202C10.1665 17.6202 10.5565 17.4102 10.7765 17.0702C11.1365 16.6002 18.0065 8.41016 18.0065 8.41016C18.9065 7.49016 17.8165 6.68016 17.0965 7.38016V7.39016Z\" fill=\"#7F56D9\"/>\n            </svg>`);\n            $('.uacf7-single-step-item.step-last .step-item-dots').html(`<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect width=\"24\" height=\"24\" rx=\"12\" fill=\"#F9F5FF\"/>\n            <circle cx=\"12\" cy=\"12\" r=\"4\" fill=\"#7F56D9\"/>\n            </svg>`);\n            var $this = $(this);\n            var searchValue = $('#uacf7-select-form').val();  \n            if(searchValue.length <= 1){\n              alert('Please select form type');\n              return false;\n            }\n             \n            $.ajax({\n              url: uacf7_admin_params.ajax_url,\n              type: 'post',\n              data: {\n                action: 'uacf7_form_generator_ai_quick_start',\n                searchValue: searchValue, \n                _ajax_nonce: uacf7_admin_params.uacf7_nonce,\n              },\n              success: function (data) { \n                $('.uacf7-single-step-content-inner img').hide();\n                $('.uacf7-generated-template').show();\n                $('#uacf7_ai_code_content').val('');\n                typeName(data.value, 0); \n                \n              }\n            });\n        });\n  \n        $(document).on('click', '.uacf7-single-step-item', function (e) {\n          $this = $(this);\n          var current_step = $this.attr('data-step');\n          var next_step = parseInt(current_step) + 1;\n          var preb_step = parseInt(current_step) - 1;\n          if(current_step != 4){\n            \n             if(current_step == '2'){  \n              \n                if ($(\".required-plugin-button\").hasClass('disabled') == false){\n                  $(\".required-plugin-button\").trigger('click');\n                  return; \n                }\n              \n             } \n\n            $('.uacf7-single-step-item[data-step=\"'+current_step+'\"]').nextAll('.uacf7-single-step-item').removeClass('active');\n            \n            $('.uacf7-single-step-item[data-step=\"'+current_step+'\"]').prevAll('.uacf7-single-step-item').addClass('active');\n            $('.uacf7-single-step-item[data-step=\"'+current_step+'\"]').addClass('active');\n            $('.uacf7-single-step-content').removeClass('active');\n            $('.uacf7-single-step-content[data-step=\"'+current_step+'\"]').addClass('active');\n            $('.uacf7-single-step-item[data-step='+preb_step+'] .step-item-dots').html( `<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M17.0965 7.39016L9.9365 14.3002L8.0365 12.2702C7.6865 11.9402 7.1365 11.9202 6.7365 12.2002C6.3465 12.4902 6.2365 13.0002 6.4765 13.4102L8.7265 17.0702C8.9465 17.4102 9.3265 17.6202 9.7565 17.6202C10.1665 17.6202 10.5565 17.4102 10.7765 17.0702C11.1365 16.6002 18.0065 8.41016 18.0065 8.41016C18.9065 7.49016 17.8165 6.68016 17.0965 7.38016V7.39016Z\" fill=\"#7F56D9\"/>\n            </svg> `);\n            $('.uacf7-single-step-item[data-step='+current_step+'] .step-item-dots').html( `<svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <rect width=\"24\" height=\"24\" rx=\"12\" fill=\"#F9F5FF\"/>\n            <circle cx=\"12\" cy=\"12\" r=\"4\" fill=\"#7F56D9\"/>\n            </svg>  `);\n            $('.uacf7-next').attr('data-current-step', current_step);\n            $('.uacf7-next').attr('data-next-step',  parseInt(current_step) + 1);\n\n            if(current_step == '3'){  \n              $('.uacf7-next').hide();\n              // only replace next to skip without svg icon\n              $('.uacf7-next').html('Skip' + `<svg width=\"14\" height=\"10\" viewBox=\"0 0 14 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path d=\"M12.3337 4.99951L1.66699 4.99951\" stroke=\"white\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              <path d=\"M9.00051 8.33317C9.00051 8.33317 12.3338 5.87821 12.3338 4.99981C12.3338 4.12141 9.00049 1.6665 9.00049 1.6665\" stroke=\"white\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n            </svg>`); \n              // $(\".tf-option-form.tf-ajax-save\").submit();\n                  \n             }else{\n           \n              $('.uacf7-next').show();\n              $('.uacf7-next').removeClass('skip');\n              // only replace next to skip without svg icon\n              $('.uacf7-next').html('Next' + `<svg width=\"14\" height=\"10\" viewBox=\"0 0 14 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M12.3337 4.99951L1.66699 4.99951\" stroke=\"white\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n                <path d=\"M9.00051 8.33317C9.00051 8.33317 12.3338 5.87821 12.3338 4.99981C12.3338 4.12141 9.00049 1.6665 9.00049 1.6665\" stroke=\"white\" stroke-width=\"1.5\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              </svg>`); \n             }\n          }\n        });\n\n        function typeName(data, iteration ) {\n            // Prevent our code executing if there are no letters left\n            if (iteration === data.length)\n              return;\n        \n            setTimeout(function () {\n              // Set the name to the current text + the next character\n              // whilst incrementing the iteration variable\n        \n              $('#uacf7_ai_code_content').val($('#uacf7_ai_code_content').val() + data[iteration++]);\n              // Re-trigger our function\n              typeName(data, iteration);\n              var textarea = $(\"#uacf7_ai_code_content\");\n              textarea.scrollTop(textarea[0].scrollHeight);\n            }, 5);\n         \n        }\n\n    });\n\n})(jQuery);\n\n//# sourceURL=webpack://uacf7/./sass/admin/js/free/setup-wizard.js?");

/***/ }),

/***/ "./sass/admin/js/free/uacf7-options.js":
/*!*********************************************!*\
  !*** ./sass/admin/js/free/uacf7-options.js ***!
  \*********************************************/
/***/ (() => {

eval("// const { divide } = require(\"lodash\");\n\n(function ($) {\n    'use strict';\n    $(document).ready(function () {\n\n        // get UACF7_metabox and get te append into the form tag\n        if ($('.uacf7-metabox.uacf7').length > 0) {\n            $('.uacf7-metabox.uacf7').each(function () {\n                var $this_clone = $(this).clone();\n                $('#contact-form-editor').append($this_clone);\n                $('#contact-form-editor').find('.uacf7-metabox').css('display', 'block');\n                $(this).remove(); \n                $('#form-panel').append('<button class=\"tf-admin-btn tf-btn-secondary uacf7-settings-addon-btn\">Ultimate Addons Settings</button>');\n            }); \n            // scroll to uacf7-metabox gap 50px\n          \n            $('.uacf7-settings-addon-btn').on('click', function (e) {\n                e.preventDefault();\n                $('html, body').animate({\n                    scrollTop: $(\".uacf7-metabox\").offset().top - 50\n                }, 1000);\n            });\n           \n        }\n        \n\n\n\n        // Field: code_editor\n\n        var TF = TF || {};\n\n        TF.funcs = {};\n \n        TF.vars = {\n            onloaded: false,\n            $body: $('body'),\n            $window: $(window),\n            $document: $(document),\n            $form_warning: null,\n            is_confirm: false,\n            form_modified: false,\n            code_themes: [],\n            is_rtl: $('body').hasClass('rtl'),\n        };\n\n        $(document).ready(function () {\n            $(\".tf-field-code-editor\").each(function () {\n                if (typeof CodeMirror !== 'function') { return; }\n                // console.log(\"working\");\n                // return false;\n                var $this =\n                    $(this),\n                    $textarea = $this.find('textarea'),\n                    $inited = $this.find('.CodeMirror'),\n                    data_editor = $textarea.data('editor');\n\n                if ($inited.length) {\n                    $inited.remove();\n                }\n\n                var interval = setInterval(function () {\n                    if ($this.is(':visible')) {\n\n                        var code_editor = CodeMirror.fromTextArea($textarea[0], data_editor);\n                        console.log(code_editor);\n                        // load code-mirror theme css.\n                        if (data_editor.theme !== 'default' && TF.vars.code_themes.indexOf(data_editor.theme) === -1) {\n\n                            var $cssLink = $('<link>');\n\n                            $('#tf-codemirror-css').after($cssLink);\n\n                            $cssLink.attr({\n                                rel: 'stylesheet',\n                                id: 'tf-codemirror-' + data_editor.theme + '-css',\n                                href: data_editor.cdnURL + '/theme/' + data_editor.theme + '.min.css',\n                                type: 'text/css',\n                                media: 'all'\n                            });\n\n                            TF.vars.code_themes.push(data_editor.theme);\n\n                        }\n\n                        CodeMirror.modeURL = data_editor.cdnURL + '/mode/%N/%N.min.js';\n                        CodeMirror.autoLoadMode(code_editor, data_editor.mode);\n\n                        code_editor.on('change', function (editor, event) {\n                            $textarea.val(code_editor.getValue()).trigger('change');\n                        });\n\n                        clearInterval(interval);\n\n                    }\n                });\n            });\n        });\n\n        // Create an instance of Notyf\n        const notyf = new Notyf({\n            ripple: true,\n            duration: 3000,\n            dismissable: true,\n            position: {\n                x: 'right',\n                y: 'top',\n            },\n        });\n\n        /*\n        * window url on change tab click\n        * @author: Foysal\n        */\n        $(window).on('hashchange load', function () {\n            let hash = window.location.hash;\n            let query = window.location.search;\n            let slug = hash.replace('#tab=', '');\n            if (hash) {\n                let selectedTab = $('.tf-tablinks[data-tab=\"' + slug + '\"]'),\n                    parentDiv = selectedTab.closest('.tf-admin-tab-item');\n\n                selectedTab.trigger('click');\n                parentDiv.trigger('click');\n            }\n\n            if (query.indexOf('dashboard') > -1) {\n                let submenu = $(\"#toplevel_page_tf_settings\").find(\".wp-submenu\");\n                submenu.find(\"a\").filter(function (a, e) {\n                    return e.href.indexOf(query) > -1;\n                }).parent().addClass(\"current\");\n            }\n        });\n        $(document).ready(function () {\n            let hash = window.location.hash;\n            let query = window.location.search;\n            let slug = hash.replace('#tab=', '');\n            if (hash) {\n                let selectedTab = $('.tf-tablinks[data-tab=\"' + slug + '\"]'),\n                    parentDiv = selectedTab.closest('.tf-admin-tab-item');\n\n                selectedTab.trigger('click');\n                parentDiv.trigger('click');\n            }\n\n            if (query.indexOf('dashboard') > -1) {\n                let submenu = $(\"#toplevel_page_tf_settings\").find(\".wp-submenu\");\n                submenu.find(\"a\").filter(function (a, e) {\n                    return e.href.indexOf(query) > -1;\n                }).parent().addClass(\"current\");\n            }\n        });\n\n        /*\n        * Tab click\n        * @author: Foysal\n        */\n        $(document).on('click', '.tf-tablinks', function (e) {\n            e.preventDefault();\n            let firstTabId,\n                $this = $(this),\n                parentDiv = $this.closest('.tf-admin-tab-item'),\n                parentTabId = parentDiv.children('.tf-tablinks').attr('data-tab'),\n                tabcontent = $('.tf-tab-content'),\n                tablinks = $('.tf-tablinks');\n\n            tabcontent.hide();\n            tablinks.removeClass('active');\n\n            let tabId = $this.attr('data-tab');\n            $('#' + tabId).css('display', 'flex');\n\n            if ($this.next().hasClass('tf-submenu')) {\n                firstTabId = parentDiv.find('.tf-submenu li:first-child .tf-tablinks').data('tab');\n            }\n\n            if (firstTabId === tabId) {\n                parentDiv.find('.tf-submenu li:first-child .tf-tablinks').addClass('active');\n            } else {\n                $this.addClass('active');\n            }\n            // url hash update\n            window.location.hash = '#tab=' + tabId;\n\n            $(\".tf-admin-tab\").removeClass('active');\n\n            let submenu = $(\"#toplevel_page_tf_settings\").find(\".wp-submenu\");\n            submenu.find(\"a\").filter(function (a, e) {\n                let slug = e.hash.replace('#tab=', '');\n                return tabId === slug || parentTabId === slug;\n            }).parent().addClass(\"current\").siblings().removeClass(\"current\")\n        });\n\n        /*\n        * Submenu toggle\n        * @author: Foysal\n        */\n        $(document).on('click', '.tf-admin-tab-item', function (e) {\n            e.preventDefault();\n            let $this = $(this);\n\n            $this.addClass('open');\n            $this.children('ul').slideDown();\n            $this.siblings('.tf-admin-tab-item').children('ul').slideUp();\n            $this.siblings('.tf-admin-tab-item').removeClass('open');\n            $this.siblings('.tf-admin-tab-item').find('li').removeClass('open');\n            $this.siblings('.tf-admin-tab-item').find('ul').slideUp();\n        });\n\n        /*\n        * Each date field initialize flatpickr\n        * @author: Foysal\n        */\n        const tfDateInt = dateSelector => {\n            $(dateSelector).each(function () {\n                let $this = $(this),\n                    dateField = $this.find('input.flatpickr'),\n                    format = dateField.data('format'),\n                    multiple = dateField.data('multiple'),\n                    minDate = dateField.data('min-date');\n\n                if (dateField.length === 2) {\n                    let startDate = $this.find('.tf-date-from input.flatpickr').flatpickr({\n                        dateFormat: format,\n                        minDate: minDate,\n                        altInput: true,\n                        // altFormat: uacf7_options.tf_admin_date_format,\n                        onChange: function (selectedDates, dateStr, instance) {\n                            endDate.set('minDate', dateStr);\n                        }\n                    });\n                    let endDate = $this.find('.tf-date-to input.flatpickr').flatpickr({\n                        dateFormat: format,\n                        minDate: minDate,\n                        altInput: true,\n                        // altFormat: uacf7_options.tf_admin_date_format,\n                        onChange: function (selectedDates, dateStr, instance) {\n                            startDate.set('maxDate', dateStr);\n                        }\n                    });\n                } else {\n                    dateField.flatpickr({\n                        dateFormat: format,\n                        minDate: minDate,\n                        altInput: true,\n                        // altFormat: uacf7_options.tf_admin_date_format,\n                        mode: multiple ? 'multiple' : 'single',\n                    });\n                }\n            });\n        }\n        tfDateInt('.tf-field-date');\n\n        /*\n        * Each time field initialize flatpickr\n        * @author: Foysal\n        */\n        const tfTimeInt = timeSelector => {\n            $(timeSelector).each(function () {\n                let $this = $(this),\n                    timeField = $this.find('input.flatpickr'),\n                    format = timeField.data('format');\n\n                timeField.flatpickr({\n                    enableTime: true,\n                    noCalendar: true,\n                    dateFormat: format,\n                    minuteIncrement: 30,\n                });\n            });\n        }\n        tfTimeInt('.tf-field-time');\n\n\n        /*\n        * Each color field initialize wpColorPicker\n        * @author: Foysal\n        */\n        const tfColorInt = colorSelector => {\n            $(colorSelector).each(function () {\n                let $this = $(this),\n                    colorField = $this.find('input.tf-color');\n\n                colorField.wpColorPicker();\n            });\n        }\n        tfColorInt('.tf-field-color');\n\n        /*\n        * Custom modal\n        * @author: Foysal\n        */\n        TF_dependency();\n\n        function TF_dependency() {\n            $('.tf-tab-content, .tf-taxonomy-metabox').each(function () {\n                var $this = $(this);\n                $this.find('[data-controller]').each(function () {\n                    var $tffields = $(this);\n                    if ($tffields.length) {\n                        // alert($tffields.length);\n                        var normal_ruleset = $.tf_deps.createRuleset(),\n                            global_ruleset = $.tf_deps.createRuleset(),\n                            normal_depends = [],\n                            global_depends = [];\n\n                        $tffields.each(function () {\n\n                            var $field = $(this),\n                                controllers = $field.data('controller').split('|'),\n                                conditions = $field.data('condition').split('|'),\n                                values = $field.data('value').toString().split('|'),\n                                is_global = $field.data('depend-global') ? true : false,\n                                ruleset = normal_ruleset;\n\n                            $.each(controllers, function (index, depend_id) {\n\n                                var value = values[index] || '',\n                                    condition = conditions[index] || conditions[0];\n\n                                ruleset = ruleset.createRule($this.find('[data-depend-id=\"' + depend_id + '\"]'), condition, value);\n\n                                ruleset.include($field);\n\n                                if (is_global) {\n                                    global_depends.push(depend_id);\n                                } else {\n                                    normal_depends.push(depend_id);\n                                }\n\n                            });\n\n                        });\n\n                        if (normal_depends.length) {\n                            $.tf_deps.enable($this, normal_ruleset, normal_depends);\n                        }\n\n                        if (global_depends.length) {\n                            $.tf_deps.enable(TF.vars.$body, global_ruleset, global_depends);\n                        }\n                    }\n                });\n\n\n            });\n        }\n\n\n        /*\n        * Custom modal\n        * @author: Foysal\n        */\n        $(document).on('click', '.tf-modal-btn', function (e) {\n            e.preventDefault();\n            let $this = $(this),\n                modal = $('#tf-icon-modal');\n\n            if (modal.length > 0 && modal.hasClass('tf-modal-show')) {\n                modal.removeClass('tf-modal-show');\n                $('body').removeClass('tf-modal-open');\n            } else {\n                modal.addClass('tf-modal-show');\n                $('body').addClass('tf-modal-open');\n            }\n        });\n        $(document).on(\"click\", '.tf-modal-close', function () {\n            $('.tf-modal').removeClass('tf-modal-show');\n            $('body').removeClass('tf-modal-open');\n        });\n        $(document).on('click', function (event) {\n            if (!$(event.target).closest(\".tf-modal-content,.tf-modal-btn\").length) {\n                $(\"body\").removeClass(\"tf-modal-open\");\n                $(\".tf-modal\").removeClass(\"tf-modal-show\");\n            }\n        });\n\n        /*\n        * Icon tab\n        * @author: Foysal\n        */\n        $(document).on('click', '.tf-icon-tab', function (e) {\n            e.preventDefault();\n            let $this = $(this),\n                tab = $this.data('tab');\n\n            $('.tf-icon-tab').removeClass('active');\n            $this.addClass('active');\n\n            $('#' + tab).addClass('active').siblings().removeClass('active');\n        });\n\n        /*\n        * Icon select\n        * @author: Foysal\n        */\n        $(document).on('click', '.tf-icon-select .tf-admin-btn, .tf-icon-select .tf-icon-preview', function (e) {\n            e.preventDefault();\n            let btn = $(this);\n\n            let fieldId = btn.closest('.tf-icon-select').attr('id');\n            $('#tf-icon-modal').data('icon-field', fieldId);\n        });\n\n        /*\n        * Icon select\n        * @author: Foysal\n        */\n        $(document).on('click', '.tf-icon-list li', function (e) {\n            e.preventDefault();\n            let $this = $(this);\n\n            $('.tf-icon-list li').removeClass('active');\n            $this.addClass('active');\n\n            //remove disabled class\n            $('.tf-icon-insert').removeClass('disabled');\n        });\n\n        /*\n        * Icon insert\n        * @author: Foysal\n        */\n        $(document).on('click', '.tf-icon-insert', function (e) {\n            e.preventDefault();\n            let $this = $(this),\n                fieldId = $('#tf-icon-modal').data('icon-field'),\n                field = $('#' + fieldId),\n                preview = field.find('.tf-icon-preview'),\n                icon = $('.tf-icon-list li.active').data('icon');\n\n            if (icon) {\n                preview.removeClass('tf-hide');\n                field.find('.tf-icon-preview-wrap i').attr('class', icon);\n                field.find('.tf-icon-value').val(icon).trigger('change');\n\n                //Close modal\n                $('.tf-modal').removeClass('tf-modal-show');\n                $('body').removeClass('tf-modal-open');\n            }\n        })\n\n        /*\n        * Icon search\n        * @author: Foysal\n        */\n        $(document).on('change keyup', '.tf-icon-search-input', function () {\n\n            let searchVal = $(this).val(),\n                $icons = $('#tf-icon-modal').find('.tf-icon-list li');\n\n            $icons.each(function () {\n\n                var $this = $(this);\n\n                if ($this.data('icon').search(new RegExp(searchVal, 'i')) < 0) {\n                    $this.hide();\n                } else {\n                    $this.show();\n                }\n\n            });\n\n        });\n\n        /*\n        * Icon remove\n        * @author: Foysal\n        */\n        $(document).on('click', '.tf-icon-preview .remove-icon', function (e) {\n            e.preventDefault();\n            let $this = $(this),\n                preview = $this.closest('.tf-icon-preview'),\n                iconSelect = $this.closest('.tf-icon-select'),\n                iconLi = $('#tf-icon-modal').find('.tf-icon-list li');\n\n            preview.addClass('tf-hide');\n            iconSelect.find('.tf-icon-preview-wrap i').attr('class', '');\n            iconSelect.find('.tf-icon-value').val('').trigger('change');\n\n            //remove active class\n            iconLi.removeClass('active');\n        });\n\n        // uacf7 addone count activate and deactivate addon\n        function uacf7_addon_count() {\n\n\n            var all = $('.uacf7-addon-input-field[type=\"checkbox\"]').length;\n            var activated = $('.uacf7-addon-input-field[type=\"checkbox\"]:checked').length;\n            var deactivate = $('.uacf7-addon-input-field[type=\"checkbox\"]:not(:checked)').length;\n\n            $('.uacf7-addon-filter-button.all .uacf7-addon-filter-cta-count').text(all);\n            $('.uacf7-addon-filter-button.activete .uacf7-addon-filter-cta-count').text(activated);\n            $('.uacf7-addon-filter-button.deactive .uacf7-addon-filter-cta-count').text(deactivate);\n        }\n        uacf7_addon_count();\n\n\n        // Uacf7 Addon save data\n        $(document).on('change', '.uacf7-addon-input-field', function () {\n            uacf7_addon_count();\n            if ($(this).is(':checked')) {\n                $(this).val(1);\n            } else {\n                $(this).val(0);\n            }\n            $(\".tf-option-form.tf-ajax-save\").submit();\n\n        });\n\n\n        $(document).on('click', '.uacf7-addon-filter-button', function (e) {\n            e.preventDefault();\n            $(this).addClass('active').siblings().removeClass('active');\n            if ($(this).hasClass('all')) {\n                $('.uacf7-single-addon-setting').css('display', 'block');\n            } else if ($(this).hasClass('activete')) {\n                $('.uacf7-single-addon-setting').css('display', 'none');\n                $('.uacf7-single-addon-setting input[type=\"checkbox\"]:checked').closest('.uacf7-single-addon-setting').css('display', 'block');\n            } else if ($(this).hasClass('deactive')) {\n                $('.uacf7-single-addon-setting').css('display', 'none');\n                $('.uacf7-single-addon-setting input[type=\"checkbox\"]:not(:checked)').closest('.uacf7-single-addon-setting').css('display', 'block');\n            }\n        });\n\n        // Uacf7 Ultimate Innput Filter\n        $(document).on('keyup', '#uacf7-addon-filter', function () {\n            $('.uacf7-addon-filter-button.all').addClass('active').siblings().removeClass('active');\n            $('.uacf7-addons-settings-page').find('.tf-field-notice-inner').remove();\n            var filter_string = $(this).val().toLowerCase();\n            if (filter_string == '') {\n\n                $('.uacf7-single-addon-setting').css('display', 'block');\n            } else {\n                $('.uacf7-single-addon-setting').css('display', 'none');\n                $('.uacf7-single-addon-setting[data-filter*=\"' + filter_string + '\"]').css('display', 'block');\n                if ($('.uacf7-single-addon-setting[data-filter*=\"' + filter_string + '\"]').length == 0) {\n                    $('.uacf7-addons-settings-page').append('<div class=\"tf-field-notice-inner tf-notice-danger\" style=\"display: block;\">No Addon Found ....</div>');\n                } else {\n                    $('.uacf7-addons-settings-page').find('.tf-field-notice-inner').remove();\n                }\n            }\n\n\n        });\n        /*\n        * Options ajax save\n        * @author: Foysal\n        */\n        $(document).on('submit', '.tf-option-form.tf-ajax-save', function (e) {\n            e.preventDefault();\n            let $this = $(this),\n                submitBtn = $this.find('.tf-submit-btn'),\n                data = new FormData(this);\n            var fontsfile = $('.itinerary-fonts-file').prop(\"files\");\n            if (typeof fontsfile !== \"undefined\") {\n                for (var i = 0; i < fontsfile.length; i++) {\n                    data.append('file[]', fontsfile[i]);\n                }\n            }\n             // get tf_import_option from data  \n            let tf_import_option =  false\n            if (typeof data.get('tf_import_option') !== \"undefined\" && data.get('tf_import_option') != null && data.get('tf_import_option').trim() != '') {\n               \n                //  confirm data before send\n                if (!confirm(tf_options.tf_export_import_msg.import_confirm)) {\n                    return;\n                }\n                \n                tf_import_option = true; \n            }\n            \n            data.append('action', 'tf_options_save');\n\n            $.ajax({\n                url: uacf7_options.ajax_url,\n                type: 'POST',\n                data: data,\n                processData: false,\n                contentType: false,\n                beforeSend: function () {\n                    if(tf_import_option == true ){\n                        $this.find('.tf-import-btn').addClass('tf-btn-loading');\n                    }\n                    submitBtn.addClass('tf-btn-loading');\n                },\n                success: function (response) {\n                    let obj = JSON.parse(response);\n                    if (obj.status === 'success') {\n                        notyf.success(obj.message);\n\n                        if(tf_import_option == true ){\n                            window.location.reload();;\n                        }\n                        \n                    } else {\n                        notyf.error(obj.message);\n                    }\n                    submitBtn.removeClass('tf-btn-loading');\n\n                    if(tf_import_option == true ){\n                        $this.find('.tf-import-btn').removeClass('tf-btn-loading');\n                    }\n\n                },\n                error: function (error) {\n                    console.log(error);\n                }\n            });\n        });\n\n        /*\n        * Each select2 field initialize select2\n        * @author: Foysal, Sydur\n        */\n        const tfSelect2Int = select2Selector => {\n            let $this = select2Selector,\n                id = $this.attr('id'),\n                placeholder = $this.data('placeholder');\n\n            $('#' + id + '').select2({\n                placeholder: placeholder,\n                allowClear: true,\n            });\n        }\n\n        $('select.tf-select2').each(function () {\n            var $this = $(this);\n            tfSelect2Int($this);\n        });\n\n\n        /*\n        * Options WP editor\n        * @author: Sydur\n        */\n        function TF_wp_editor($id) {\n            wp.editor.initialize($id, {\n                tinymce: {\n                    wpautop: true,\n                    plugins: 'charmap colorpicker hr lists paste tabfocus textcolor fullscreen wordpress wpautoresize wpeditimage wpemoji wpgallery wplink wptextpattern',\n                    toolbar1: 'formatselect,bold,italic,bullist,numlist,blockquote,alignleft,aligncenter,alignright,link,wp_more,spellchecker,fullscreen,wp_adv,listbuttons',\n                    toolbar2: 'styleselect,strikethrough,hr,forecolor,pastetext,removeformat,charmap,outdent,indent,undo,redo,wp_help',\n                    //   textarea_rows : 20\n                },\n                quicktags: { buttons: 'strong,em,link,block,del,ins,img,ul,ol,li,code,more,close' },\n                mediaButtons: false,\n            });\n        }\n\n        $('textarea.wp_editor, textarea.tf_wp_editor').each(function () {\n            let $id = $(this).attr('id');\n            TF_wp_editor($id);\n        });\n\n        /*\n        * Booking Confirmation Field Fixed\n        * @since 2.9.28\n        * @author: Jahid\n        */\n        TF_Booking_Confirmation();\n        function TF_Booking_Confirmation() {\n            if ($('.tf-repeater-wrap .tf-single-repeater-book-confirm-field').length > 0) {\n                $('.tf-repeater-wrap .tf-single-repeater-book-confirm-field').each(function () {\n                    let $this = $(this);\n                    let repeaterCount = $this.find('input[name=\"tf_repeater_count\"]').val();\n                    if (0 == repeaterCount || 1 == repeaterCount || 2 == repeaterCount) {\n                        $this.find('.tf_hidden_fields').hide();\n                        $this.find('.tf-repeater-icon-clone').hide();\n                        $this.find('.tf-repeater-icon-delete').hide();\n                    }\n                });\n            }\n        }\n        /*\n        * Add New Repeater Item\n        * @author: Sydur\n        */\n        $(document).on('click', '.tf-repeater-icon-add', function () {\n            var $this = $(this);\n            var $this_parent = $this.parent().parent();\n            var id = $(this).attr(\"data-repeater-id\");\n            var max = $(this).attr(\"data-repeater-max\");\n            var add_value = $this_parent.find('.tf-single-repeater-clone-' + id + ' .tf-single-repeater-' + id + '').clone();\n            var count = $this_parent.find('.tf-repeater-wrap-' + id + ' .tf-single-repeater-' + id + '').length;\n            var parent_field = add_value.find(':input[name=\"tf_parent_field\"]').val();\n            var current_field = add_value.find(':input[name=\"tf_current_field\"]').val();\n\n            $this_parent.find('.tf-repeater-wrap .tf-field-notice-inner').remove();\n            // Chacked maximum repeater\n            if (max != '' && count >= max) {\n                $this_parent.find('.tf-repeater-wrap').append('<div class=\"tf-field-notice-inner tf-notice-danger\" style=\"display: block;\">You have reached limit.</div>');\n                return false;\n            }\n\n            // Repeater Count Add Value\n            add_value.find(':input[name=\"tf_repeater_count\"]').val(count);\n\n            // Repeater Room Unique ID\n            var room_uniqueid = add_value.find('.unique-id input');\n            if (typeof room_uniqueid !== \"undefined\") {\n                add_value.find('.unique-id input').val(new Date().valueOf() + count);\n            }\n            let repeatDateField = add_value.find('.tf-field-date');\n            if (repeatDateField.length > 0) {\n                repeatDateField.find('input').each(function () {\n\n                    if ($(this).attr('name') == '' || typeof $(this).attr('name') === \"undefined\") {\n                        $(this).remove()\n                    }\n                });\n                tfDateInt(repeatDateField);\n            }\n\n            let repeatTimeField = add_value.find('.tf-field-time');\n            if (repeatTimeField.length > 0) {\n                tfTimeInt(repeatTimeField);\n            }\n\n            let repeatColorField = add_value.find('.tf-field-color');\n            if (repeatColorField.length > 0) {\n                repeatColorField.find('input.tf-color').each(function () {\n                    var color_field = $(this).clone();\n\n                    if ($(this).closest('li').length > 0) {\n                        $(this).closest('li').append(color_field);\n                    } else {\n                        $(this).closest('.tf-fieldset').append(color_field);\n                    }\n                    $(this).closest('.wp-picker-container').remove();\n                });\n\n                tfColorInt(repeatColorField);\n            }\n\n            if (parent_field == '') {\n                // Update  repeater name And id\n                add_value.find(':input').each(function () {\n                    this.name = this.name.replace('_____', '').replace('[' + current_field + '][00]', '[' + current_field + '][' + count + ']');\n                    this.id = this.id.replace('_____', '').replace('[' + current_field + '][00]', '[' + current_field + '][' + count + ']');\n                });\n                var update_paren = add_value.find('.tf-repeater input[name=\"tf_parent_field\"]').val();\n                if (typeof update_paren !== \"undefined\") {\n                    var update_paren = update_paren.replace('[' + current_field + '][00]', '[' + current_field + '][' + count + ']');\n                }\n                add_value.find('.tf-repeater input[name=\"tf_parent_field\"]').val(update_paren);\n\n            } else {\n                // Update  repeater name And id\n                var update_paren = add_value.find(':input[name=\"tf_parent_field\"]').val();\n                add_value.find(':input').each(function () {\n                    this.name = this.name.replace('_____', '').replace('[' + current_field + '][00]', '[' + current_field + '][' + count + ']');\n                    this.id = this.id.replace('_____', '').replace('[' + current_field + '][00]', '[' + current_field + '][' + count + ']');\n                });\n            }\n            // Update Repeaterr label\n            add_value.find('label').each(function () {\n                var for_value = $(this).attr(\"for\");\n                if (typeof for_value !== \"undefined\") {\n                    for_value = for_value.replace('_____', '').replace('[' + current_field + '][00]', '[' + current_field + '][' + count + ']');\n                    $(this).attr(\"for\", for_value);\n                }\n            });\n            // Update Icon select id\n            add_value.find('.tf-icon-select').each(function (index) {\n                var icon_id = $(this).attr(\"id\");\n                if (typeof icon_id !== \"undefined\") {\n                    icon_id = icon_id + index + count;\n                    $(this).attr(\"id\", icon_id)\n\n                }\n            });\n            // Update Data depend id\n            add_value.find('[data-depend-id]').each(function () {\n                var data_depend_id = $(this).attr(\"data-depend-id\");\n                if (typeof data_depend_id !== \"undefined\") {\n                    data_depend_id = data_depend_id.replace('[' + current_field + '][00]', '[' + current_field + '][' + count + ']');\n                    $(this).attr(\"data-depend-id\", data_depend_id);\n                }\n            });\n            // Update Data Controller\n            add_value.find('[data-controller]').each(function () {\n                var data_controller = $(this).attr(\"data-controller\");\n                if (typeof data_controller !== \"undefined\") {\n                    data_controller = data_controller.replace('[' + current_field + '][00]', '[' + current_field + '][' + count + ']');\n                    $(this).attr(\"data-controller\", data_controller);\n                }\n            });\n\n            // Replace Old editor\n            add_value.find('.wp-editor-wrap').each(function () {\n                var textarea = $(this).find('.tf_wp_editor').show();\n                // Get content of a specific editor:\n                var tf_editor_ex_data = $('#' + textarea.attr('id') + '').val();\n                if (tf_editor_ex_data && typeof tf_editor_ex_data !== \"undefined\") {\n                    var textarea_content = tinymce.get(textarea.attr('id')).getContent();\n                } else {\n                    var textarea_content = '';\n                }\n                textarea.val(textarea_content);\n                $(this).closest('.tf-field-textarea').append(textarea);\n                $(this).remove();\n            });\n\n            // Update Data Append value\n            var append = $this_parent.find('.tf-repeater-wrap-' + id + '');\n\n            add_value.appendTo(append).show();\n\n            // replace new editor\n            add_value.find('textarea.parent_wp_editor').each(function () {\n                var count = Math.random().toString(36).substring(3, 9) + 1;\n                // this.id = this.id.replace('' + current_field + '__00', '' + current_field + '__' + count + '');\n                $(this).attr('id', current_field + count);\n                $(this).attr('data-count-id', count);\n                var parent_repeater_id = $(this).attr('id');\n                TF_wp_editor(parent_repeater_id);\n            });\n\n            // replace new Select 2\n            add_value.find('select.tf-select2-parent').each(function () {\n                this.id = this.id.replace('' + current_field + '__00', '' + current_field + '__' + count + '');\n                var parent_repeater_id = $(this).attr('id');\n                var $this = $(this);\n                tfSelect2Int($this);\n            });\n\n            // repeater dependency repeater\n            TF_dependency();\n\n            // Booking Confirmation repeater Hidden field\n            TF_Booking_Confirmation();\n        });\n\n        // Repeater Delete Value\n        $(document).on('click', '.tf-repeater-icon-delete', function () {\n            var max = $(this).attr(\"data-repeater-max\");\n            var $this_parent = $(this).closest('.tf-repeater-wrap');\n            var count = $this_parent.find('.tf-single-repeater').length;\n            // Chacked maximum repeater\n\n            if (confirm(\"Are you sure to delete this item?\")) {\n                $this_parent.find('.tf-field-notice-inner').remove();\n                $(this).closest('.tf-single-repeater').remove();\n            }\n            return false;\n        });\n\n        /*\n        * Clone Repeater Item\n        * @author: Sydur\n        */\n        $(document).on('click', '.tf-repeater-icon-clone', function () {\n            var $this_parent = $(this).closest('.tf-repeater-wrap');\n            let clone_value = $(this).closest('.tf-single-repeater').clone();\n            var max = $(this).attr(\"data-repeater-max\");\n            var parent_field = clone_value.find('input[name=\"tf_parent_field\"]').val();\n            var current_field = clone_value.find('input[name=\"tf_current_field\"]').val();\n            var repeater_count = clone_value.find('input[name=\"tf_repeater_count\"]').val();\n            var count = $this_parent.find('.tf-single-repeater-' + current_field + '').length;\n\n\n            $this_parent.find('.tf-field-notice-inner').remove();\n            // Chacked maximum repeater\n            if (max != '' && count >= max) {\n                $this_parent.append('<div class=\"tf-field-notice-inner tf-notice-danger\" style=\"display: block;\">You have reached limit in free version. Please subscribe to Pro for unlimited access</div>');\n                return false;\n            }\n\n            // Repeater Room Unique ID\n            var room_uniqueid = clone_value.find('.unique-id input');\n            if (typeof room_uniqueid !== \"undefined\") {\n                clone_value.find('.unique-id input').val(new Date().valueOf() + count);\n            }\n\n            let repeatDateField = clone_value.find('.tf-field-date');\n\n            if (repeatDateField.length > 0) {\n                repeatDateField.find('input').each(function () {\n                    if ($(this).attr('name') == '' || typeof $(this).attr('name') === \"undefined\") {\n                        $(this).remove();\n                    }\n                });\n                tfDateInt(repeatDateField);\n            }\n\n            let repeatTimeField = clone_value.find('.tf-field-time');\n            if (repeatTimeField.length > 0) {\n                tfTimeInt(repeatTimeField);\n            }\n\n            let repeatColorField = clone_value.find('.tf-field-color');\n            if (repeatColorField.length > 0) {\n                repeatColorField.find('input.tf-color').each(function () {\n                    var color_field = $(this).clone();\n\n                    if ($(this).closest('li').length > 0) {\n                        $(this).closest('li').append(color_field);\n                    } else {\n                        $(this).closest('.tf-fieldset').append(color_field);\n                    }\n                    $(this).closest('.wp-picker-container').remove();\n                });\n\n                tfColorInt(repeatColorField);\n            }\n            if (parent_field == '') {\n                // Replace input id and name\n                clone_value.find(':input').each(function () {\n                    if ($(this).closest('.tf-single-repeater-clone').length == 0) {\n                        this.name = this.name.replace('_____', '').replace('[' + current_field + '][' + repeater_count + ']', '[' + current_field + '][' + count + ']');\n                        this.id = this.id.replace('_____', '').replace('[' + current_field + '][' + repeater_count + ']', '[' + current_field + '][' + count + ']');\n                    }\n                });\n                var update_paren = clone_value.find('.tf-repeater input[name=\"tf_parent_field\"]').val();\n                if (typeof update_paren !== \"undefined\") {\n                    var update_paren = update_paren.replace('[' + current_field + '][' + repeater_count + ']', '[' + current_field + '][' + count + ']');\n                }\n                clone_value.find('.tf-repeater input[name=\"tf_parent_field\"]').val(update_paren);\n\n            } else {\n                // Replace input id and name\n                clone_value.find(':input').each(function () {\n                    if ($(this).closest('.tf-single-repeater-clone').length == 0) {\n                        this.name = this.name.replace('_____', '').replace('[' + current_field + '][' + repeater_count + ']', '[' + current_field + '][' + count + ']');\n                        this.id = this.id.replace('_____', '').replace('[' + current_field + '][' + repeater_count + ']', '[' + current_field + '][' + count + ']');\n                    }\n                });\n            }\n            clone_value.find('label').each(function () {\n                var for_value = $(this).attr(\"for\");\n                if (typeof for_value !== \"undefined\") {\n                    for_value = for_value.replace('_____', '').replace('[' + current_field + '][' + repeater_count + ']', '[' + current_field + '][' + count + ']');\n                    var for_value = $(this).attr(\"for\", for_value);\n                }\n            });\n            // Update Icon select id\n            clone_value.find('.tf-icon-select').each(function (index) {\n                var icon_id = $(this).attr(\"id\");\n                if (typeof icon_id !== \"undefined\") {\n                    icon_id = icon_id + index + count;\n                    $(this).attr(\"id\", icon_id)\n\n                }\n            });\n            // Replace Data depend id ID\n            clone_value.find('[data-depend-id]').each(function () {\n                var data_depend_id = $(this).attr(\"data-depend-id\");\n                if (typeof data_depend_id !== \"undefined\") {\n                    data_depend_id = data_depend_id.replace('[' + current_field + '][' + repeater_count + ']', '[' + current_field + '][' + count + ']');\n                    $(this).attr(\"data-depend-id\", data_depend_id);\n                }\n            });\n            // Replace Data depend id ID\n            clone_value.find('[data-controller]').each(function () {\n                var data_controller = $(this).attr(\"data-controller\");\n                if (typeof data_controller !== \"undefined\") {\n                    data_controller = data_controller.replace('[' + current_field + '][' + repeater_count + ']', '[' + current_field + '][' + count + ']');\n                    $(this).attr(\"data-controller\", data_controller);\n                }\n            });\n            // Replace Data repeter Count id ID\n            clone_value.find('input[name=\"tf_repeater_count\"]').val(count)\n\n            // Replace Old editor\n            clone_value.find('.wp-editor-wrap').each(function () {\n                var textarea = $(this).find('.tf_wp_editor').show();\n                // Get content of a specific editor:\n                var tf_editor_ex_data = $('#' + textarea.attr('id') + '').val();\n                var textarea_id = textarea.attr('id');\n                if (textarea_id != '' && typeof textarea_id !== \"undefined\") {\n                    // var textarea_content = tinymce.get(textarea.attr('id')).getContent();\n                    var textarea_content = tinymce.editors[textarea_id].getContent();\n                } else {\n                    var textarea_content = '';\n                }\n                textarea.val(textarea_content);\n                $(this).closest('.tf-field-textarea').append(textarea);\n                $(this).remove();\n            });\n\n            // Replace Old Select 2\n            clone_value.find('.tf-field-select2').each(function () {\n\n                var get_selected_value = $(this).find('select.tf-select-two').select2('val')\n                $(this).find('select.tf-select-two').removeAttr(\"data-select2-id aria-hidden tabindex\");\n                $(this).find('select.tf-select-two option').removeAttr(\"data-select2-id\");\n                $(this).find('select.tf-select-two').removeClass(\"select2-hidden-accessible\");\n                var select2 = $(this).find('select.tf-select-two').show();\n\n                select2.val(get_selected_value);\n                $(this).find('.tf-fieldset').append(select2);\n                $(this).find('span.select2-container').remove();\n            });\n\n            //Append Value\n            $(this).closest('.tf-repeater-wrap').append(clone_value).show();\n\n            // Clone Wp Editor\n            clone_value.find('textarea.parent_wp_editor, textarea.wp_editor').each(function () {\n                var count = Math.random().toString(36).substring(3, 9) + 1;\n                $(this).attr('id', current_field + count);\n                $(this).attr('data-count-id', count);\n                var parent_repeater_id = $(this).attr('id');\n                TF_wp_editor(parent_repeater_id);\n            });\n\n            // Clone Select 2\n            clone_value.find('select.tf-select2-parent, select.tf-select2').each(function () {\n                this.id = this.id.replace('' + current_field + '__' + repeater_count, '' + current_field + '__' + count + '');\n                var $this = $(this);\n                tfSelect2Int($this);\n            });\n\n            // Dependency value\n            TF_dependency();\n        });\n\n        // Repeater show hide\n        $(document).on('click', '.tf-repeater-title, .tf-repeater-icon-collapse', function () {\n            var tf_repater_fieldname = $(this).closest('.tf-single-repeater').find('input[name=tf_current_field]').val();\n            $(this).closest('.tf-single-repeater-' + tf_repater_fieldname + '').find('.tf-repeater-content-wrap').slideToggle();\n            $(this).closest('.tf-single-repeater-' + tf_repater_fieldname + '').children('.tf-repeater-content-wrap').toggleClass('hide');\n            if ($(this).closest('.tf-single-repeater-' + tf_repater_fieldname + '').children('.tf-repeater-content-wrap').hasClass('hide') == true) {\n                $(this).closest('.tf-single-repeater-' + tf_repater_fieldname + ' .tf-repeater-header').children('.tf-repeater-icon-collapse').html('<i class=\"fa-solid fa-angle-down\"></i>');\n            } else {\n                $(this).closest('.tf-single-repeater-' + tf_repater_fieldname + ' .tf-repeater-header').children('.tf-repeater-icon-collapse').html('<i class=\"fa-solid fa-angle-up\"></i>');\n            }\n        });\n\n        // Repeater Drag and  show\n        $(\".tf-repeater-wrap\").sortable({\n            handle: '.tf-repeater-icon-move',\n            start: function (event, ui) { // turn TinyMCE off while sorting (if not, it won't work when resorted)\n                var textareaID = $(ui.item).find('.tf_wp_editor').attr('id');\n\n            },\n            stop: function (event, ui) { // re-initialize TinyMCE when sort is completed\n                $(ui.item).find('.tf_wp_editor').each(function () {\n                    var textareaID = $(this).attr('id');\n                    tinyMCE.execCommand('mceRemoveEditor', false, textareaID);\n                    tinyMCE.execCommand('mceAddEditor', false, textareaID);\n                });\n\n                // $(this).find('.update-warning').show();\n            }\n        });\n\n\n        // TAB jquery\n        $(document).on('click', '.tf-tab-item', function () {\n            var $this = $(this);\n            var tab_id = $this.data('tab-id');\n            if ($this.parent().parent().find('.tf-tab-item-content').hasClass(\"show\") == true) {\n                $this.parent().parent().find('.tf-tab-item-content').removeClass('show');\n            }\n\n            $this.parent().find('.tf-tab-item').removeClass('show');\n\n            $this.addClass('show');\n            $this.parent().parent().find('.tf-tab-item-content[data-tab-id = ' + tab_id + ']').addClass('show');\n\n        });\n\n        \n        $(document).on('click', '.tf-import-btn', function (event) {\n            event.preventDefault();\n            var textarea = $('textarea[name=\"tf_import_option\"]');\n            var form_id = textarea.attr('data-form-id');\n            var importData = textarea.val().trim();\n            if (importData == '') {\n                alert(tf_options.tf_export_import_msg.import_empty);\n                let importField = $('textarea[name=\"tf_import_option\"]');\n                importField.focus();\n                importField.css('border', '1px solid red');\n                return;\n            }\n \n            if(form_id == 0){\n                // Triger the form submit\n                $(\".tf-option-form.tf-ajax-save\").submit();\n            }else{\n                 //confirm data before send\n                if (!confirm(tf_options.tf_export_import_msg.import_confirm)) {\n                    return;\n                }\n                $.ajax({\n                    url: tf_options.ajax_url,\n                    method: 'POST',\n                    data: {\n                        action: 'uacf7_option_import',\n                        tf_import_option: importData,\n                        form_id: form_id,\n                        ajax_nonce: tf_options.nonce,\n                    },\n                    beforeSend: function () {\n                        $('.tf-import-btn').html('Importing...');\n                        $('.tf-import-btn').attr('disabled', 'disabled');\n                    },\n                    success: function (response) {  \n                        if (response.data.status == 'success') {\n                            // alert(tf_options.tf_export_import_msg.imported);\n                            $('.tf-import-btn').html('Imported');\n                            notyf.success(response.data.message);\n                            window.location.reload();\n                        } else {\n                            notyf.error(response.data.message);\n                            // alert('Something went wrong!');\n                        }\n                    }\n                });\n            }\n        });\n \n        // $(document).on('click', '.tf-import-btn', function (event) {\n        //     event.preventDefault();\n\n        //     // Get the import URL from the button's href attribute \n        //     // Get the import data from the textarea\n\n        //     var textarea = $('textarea[name=\"tf_import_option\"]');\n        //     var form_id = textarea.attr('data-form-id');\n        //     var importData = textarea.val().trim();\n        //     if (importData == '') {\n        //         alert(tf_options.tf_export_import_msg.import_empty);\n        //         let importField = $('textarea[name=\"tf_import_option\"]');\n        //         importField.focus();\n        //         importField.css('border', '1px solid red');\n        //         return;\n        //     } else {\n        //         //confirm data before send\n        //         if (!confirm(tf_options.tf_export_import_msg.import_confirm)) {\n        //             return;\n        //         }\n\n        //         $.ajax({\n        //             url: tf_options.ajax_url,\n        //             method: 'POST',\n        //             data: {\n        //                 action: 'uacf7_option_import',\n        //                 tf_import_option: importData,\n        //                 form_id: form_id,\n        //                 ajax_nonce: tf_options.nonce,\n        //             },\n        //             beforeSend: function () {\n        //                 $('.tf-import-btn').html('Importing...');\n        //                 $('.tf-import-btn').attr('disabled', 'disabled');\n        //             },\n        //             success: function (response) {\n        //                 if (response.success) {\n        //                     alert(tf_options.tf_export_import_msg.imported);\n        //                     $('.tf-import-btn').html('Imported');\n        //                     window.location.reload();\n        //                 } else {\n        //                     alert('Something went wrong!');\n        //                 }\n        //             }\n        //         });\n        //     }\n        // });\n\n    });\n\n    // $(document).ready(function () {\n    //     $('.tf-import-btn').on('click', function (event) {\n          \n    //     })\n    // });\n\n    //export the data in txt file\n    jQuery(document).ready(function ($) {\n        $('.tf-export-btn').on('click', function (event) {\n            event.preventDefault();\n \n            // Get the textarea value\n            var textarea = $('textarea[name=\"tf_export_option\"]');\n            var option_name = textarea.attr('data-option');\n            var textareaValue = textarea.val();\n\n            // Create a blob with the textarea value\n            var blob = new Blob([textareaValue], { type: 'text/plain' });\n\n            // Create a temporary URL for the blob\n            var url = window.URL.createObjectURL(blob);\n\n            // Create a temporary link element\n            var link = document.createElement('a'); \n            link.href = url;\n            link.download = option_name + '.json'; \n\n            // Programmatically click the link to initiate the file download\n            link.click();\n\n            // Clean up the temporary URL\n            window.URL.revokeObjectURL(url);\n        });\n    });\n})(jQuery);\n\n\nfunction openTab(evt, tabName) {\n    evt.preventDefault();\n    var i, tabcontent, tablinks;\n    tabcontent = document.getElementsByClassName(\"tf-tab-content\");\n    for (i = 0; i < tabcontent.length; i++) {\n        tabcontent[i].style.display = \"none\";\n    }\n    tablinks = document.getElementsByClassName(\"tf-tablinks\");\n    for (i = 0; i < tablinks.length; i++) {\n        tablinks[i].className = tablinks[i].className.replace(\" active\", \"\");\n    }\n    document.getElementById(tabName).style.display = \"block\";\n    evt.target.className += \" active\";\n    jQuery(\".tf-admin-tab\").removeClass('active');\n}\n\nvar frame, gframe;\n(function ($) {\n    // Single Image remove\n    $(document).on(\"click\", \".tf-image-close\", function (e) {\n        e.preventDefault();\n        $this = $(this);\n        var fieldname = $(this).attr(\"tf-field-name\");\n        var tf_preview_class = fieldname.replace(/[.[\\]_-]/g, '_');\n\n        $this.parent().parent().find('input').val('');\n        $this.parent().html('');\n\n    });\n\n    // Gallery Image remove\n    $(document).on(\"click\", \".tf-gallery-remove\", function (e) {\n        e.preventDefault();\n        $this = $(this);\n        var fieldname = $(this).attr(\"tf-field-name\");\n        var tf_preview_class = fieldname.replace(/[.[\\]_-]/g, '_');\n\n        $this.parent().parent().find('input').val('');\n        $this.parent().parent().find('.tf-fieldset-gallery-preview').html('');\n        $('a.tf-gallery-edit, a.tf-gallery-remove').css(\"display\", \"none\");\n\n    });\n\n    $(document).ready(function () {\n\n        // Single Image Upload\n\n        $('body').on('click', '.tf-media-upload', function (e) {\n            var $this = $(this);\n            var fieldname = $(this).attr(\"tf-field-name\");\n            var tf_preview_class = fieldname.replace(/[.[\\]_-]/g, '_');\n\n            frame = wp.media({\n                title: \"Select Image\",\n                button: {\n                    text: \"Insert Image\"\n                },\n                multiple: false\n            });\n            frame.on('select', function () {\n\n                var attachment = frame.state().get('selection').first().toJSON();\n                $this.parent().parent().find('input').val(attachment.url);\n                $this.parent().parent().find('.tf-fieldset-media-preview').html(`<div class=\"tf-image-close\" tf-field-name='${fieldname}'>✖</div><img src='${attachment.url}' />`);\n            });\n            frame.open();\n            return false;\n        });\n\n        // Gallery Image Upload\n\n        $('body').on('click', '.tf-gallery-upload, .tf-gallery-edit', function (e) {\n            var $this = $(this);\n            var fieldname = $(this).attr(\"tf-field-name\");\n            var tf_preview_class = fieldname.replace(/[.[\\]_-]/g, '_');\n            gframe = wp.media({\n                title: \"Select Gallery\",\n                button: {\n                    text: \"Insert Gallery\"\n                },\n                multiple: 'add'\n            });\n\n            gframe.on('open', function () {\n                var selection = gframe.state().get('selection');\n                var ids_value = $this.parent().parent().find('input').val();\n\n                if (ids_value.length > 0) {\n                    var ids = ids_value.split(',');\n\n                    ids.forEach(function (id) {\n                        attachment = wp.media.attachment(id);\n                        attachment.fetch();\n                        selection.add(attachment ? [attachment] : []);\n                    });\n                }\n            });\n\n            gframe.on('select', function () {\n                var image_ids = [];\n                var image_urls = [];\n                var attachments = gframe.state().get('selection').toJSON();\n                $this.parent().parent().find('.tf-fieldset-gallery-preview').html('');\n                for (i in attachments) {\n                    var attachment = attachments[i];\n                    image_ids.push(attachment.id);\n                    image_urls.push(attachment.url);\n                    $this.parent().parent().find('.tf-fieldset-gallery-preview').append(`<img src='${attachment.url}' />`);\n                }\n                $this.parent().parent().find('input').val(image_ids.join(\",\"));\n                $this.parent().find('a.tf-gallery-edit, a.tf-gallery-remove').css(\"display\", \"inline-block\");\n            });\n\n            gframe.open();\n            return false;\n        });\n\n\n\n        // Texonomy submit event\n        $('#addtag > .submit #submit').click(function () {\n            $(\".tf-fieldset-media-preview\").html(\"\");\n        });\n\n        // Switcher Value Changed\n        $(document).on(\"change\", \".tf-switch\", function (e) {\n            var $this = $(this);\n            if (this.checked) {\n                var $this = $(this);\n                var value = $this.val(1);\n            } else {\n                var $this = $(this);\n                var value = $this.val('');\n            }\n        });\n\n\n\n        $('.tf-mobile-tabs').click(function (e) {\n            e.preventDefault();\n            $(\".tf-admin-tab\").toggleClass('active');\n        });\n\n\n        $('.tf-faq-title').click(function () {\n            var $this = $(this);\n            if (!$this.hasClass(\"active\")) {\n                $(\".tf-faq-desc\").slideUp(400);\n                $(\".tf-faq-title\").removeClass(\"active\");\n            }\n            $this.toggleClass(\"active\");\n            $this.next().slideToggle();\n        });\n    });\n\n\n})(jQuery);\n\n\n// Field Dependency\n\n(function ($) {\n\n    'use strict';\n\n    function Rule(controller, condition, value) {\n        this.init(controller, condition, value);\n    }\n\n    $.extend(Rule.prototype, {\n\n        init: function (controller, condition, value) {\n\n            this.controller = controller;\n            this.condition = condition;\n            this.value = value;\n            this.rules = [];\n            this.controls = [];\n\n        },\n\n        evalCondition: function (context, control, condition, val1, val2) {\n\n            if (condition == '==') {\n\n                return this.checkBoolean(val1) == this.checkBoolean(val2);\n\n            } else if (condition == '!=') {\n\n                return this.checkBoolean(val1) != this.checkBoolean(val2);\n\n            } else if (condition == '>=') {\n\n                return Number(val2) >= Number(val1);\n\n            } else if (condition == '<=') {\n\n                return Number(val2) <= Number(val1);\n\n            } else if (condition == '>') {\n\n                return Number(val2) > Number(val1);\n\n            } else if (condition == '<') {\n\n                return Number(val2) < Number(val1);\n\n            } else if (condition == '()') {\n\n                return window[val1](context, control, val2);\n\n            } else if (condition == 'any') {\n\n                if ($.isArray(val2)) {\n                    for (var i = val2.length - 1; i >= 0; i--) {\n                        if ($.inArray(val2[i], val1.split(',')) !== -1) {\n                            return true;\n                        }\n                    }\n                } else {\n                    if ($.inArray(val2, val1.split(',')) !== -1) {\n                        return true;\n                    }\n                }\n\n            } else if (condition == 'not-any') {\n\n                if ($.isArray(val2)) {\n                    for (var i = val2.length - 1; i >= 0; i--) {\n                        if ($.inArray(val2[i], val1.split(',')) == -1) {\n                            return true;\n                        }\n                    }\n                } else {\n                    if ($.inArray(val2, val1.split(',')) == -1) {\n                        return true;\n                    }\n                }\n\n            }\n\n            return false;\n\n        },\n\n        checkBoolean: function (value) {\n\n            switch (value) {\n\n                case true:\n                case 'true':\n                case 1:\n                case '1':\n                    value = true;\n                    break;\n\n                case null:\n                case false:\n                case 'false':\n                case 0:\n                case '0':\n                    value = false;\n                    break;\n\n            }\n\n            return value;\n        },\n\n        checkCondition: function (context) {\n\n            if (!this.condition) {\n                return true;\n            }\n\n            var control = context.find(this.controller);\n\n            var control_value = this.getControlValue(context, control);\n\n            if (control_value === undefined) {\n                return false;\n            }\n\n            control_value = this.normalizeValue(control, this.value, control_value);\n\n            return this.evalCondition(context, control, this.condition, this.value, control_value);\n        },\n\n        normalizeValue: function (control, baseValue, control_value) {\n\n            if (typeof baseValue == 'number') {\n                return parseFloat(control_value);\n            }\n\n            return control_value;\n        },\n\n        getControlValue: function (context, control) {\n\n            if (control.length > 1 && (control.attr('type') == 'radio' || control.attr('type') == 'checkbox')) {\n\n                return control.filter(':checked').map(function () {\n                    return this.value;\n                }).get();\n\n            } else if (control.attr('type') == 'checkbox' || control.attr('type') == 'radio') {\n\n                return control.is(':checked');\n\n            }\n\n            return control.val();\n\n        },\n\n        createRule: function (controller, condition, value) {\n            var rule = new Rule(controller, condition, value);\n            this.rules.push(rule);\n            return rule;\n        },\n\n        include: function (input) {\n            this.controls.push(input);\n        },\n\n        applyRule: function (context, enforced) {\n\n            var result;\n\n            if (typeof (enforced) == 'undefined') {\n                result = this.checkCondition(context);\n            } else {\n                result = enforced;\n            }\n\n            var controls = $.map(this.controls, function (elem, idx) {\n                return context.find(elem);\n            });\n\n            if (result) {\n\n                $(controls).each(function () {\n                    $(this).removeClass('tf-depend-on');\n                });\n\n                $(this.rules).each(function () {\n                    this.applyRule(context);\n                });\n\n            } else {\n\n                $(controls).each(function () {\n                    $(this).addClass('tf-depend-on');\n                });\n\n                $(this.rules).each(function () {\n                    this.applyRule(context, false);\n                });\n\n            }\n        }\n    });\n\n    function Ruleset() {\n        this.rules = [];\n    };\n\n    $.extend(Ruleset.prototype, {\n\n        createRule: function (controller, condition, value) {\n            var rule = new Rule(controller, condition, value);\n            this.rules.push(rule);\n            return rule;\n        },\n\n        applyRules: function (context) {\n            $(this.rules).each(function () {\n                this.applyRule(context);\n            });\n        }\n    });\n\n    $.tf_deps = {\n\n        createRuleset: function () {\n            return new Ruleset();\n        },\n\n        enable: function (selection, ruleset, depends) {\n\n            selection.on('change keyup', function (elem) {\n\n                var depend_id = elem.target.getAttribute('data-depend-id') || elem.target.getAttribute('data-sub-depend-id');\n\n                if (depends.indexOf(depend_id) !== -1) {\n                    ruleset.applyRules(selection);\n                }\n\n            });\n\n            ruleset.applyRules(selection);\n\n            return true;\n        }\n    };\n\n})(jQuery);\n\n\n\n/**\n * Shortcode generator js\n * @author Abu Hena\n * @since 2.9.3\n */\n(function ($) {\n    //get each of the field value\n    $(document).on('click', '.tf-generate-tour .tf-btn', function (event) {\n        event.preventDefault();\n        var arr = [];\n\n        $(this).parents('.tf-shortcode-generator-single').find(\".tf-sg-field-wrap\").each(function () {\n            var $this = $(this);\n            var data = $this.find('.tf-setting-field').val();\n            var option_name = $this.find('.tf-setting-field').attr('data-term');\n            var post_count = $this.find('.post-count').attr('data-count');\n\n            if (option_name != undefined && option_name != '') {\n                data = option_name + '=' + (data.length ? data : '\"\"');\n            }\n            if (post_count != undefined && post_count != '') {\n                data = post_count + '=' + (data.length ? data : '\"\"');\n            }\n            arr.push(data);\n        });\n\n        var allData = arr.filter(Boolean);\n        var shortcode = \"[\" + allData.join(' ') + \"]\";\n\n        $(this).parents('.tf-shortcode-generator-single').find('.tf-shortcode-value').val(shortcode);\n        $(this).parents('.tf-shortcode-generator-single').find('.tf-copy-item').slideDown();\n    });\n\n    $(document).on('click', '.tf-sg-close', function (event) {\n        $(this).parents('.tf-shortcode-generators').find('.tf-sg-form-wrapper').fadeOut();\n    });\n\n    $(document).on('click', '.tf-shortcode-btn', function (event) {\n        var $this = $(this);\n        $this.parents('.tf-shortcode-generator-single').find('.tf-sg-form-wrapper').fadeIn();\n\n        $this.parents('.tf-shortcode-generator-single').mouseup(function (e) {\n            var container = $(this).find(\".tf-shortcode-generator-form\");\n            var container_parent = container.parent(\".tf-sg-form-wrapper\");\n            if (!container.is(e.target) && container.has(e.target).length === 0) {\n                container_parent.fadeOut();\n            }\n        });\n\n    });\n\n    //Copy the shortcode value\n    $(document).on('click', '.tf-copy-btn', function () {\n        var fieldIdValue = $(this).parent('.tf-shortcode-field').find('#tf-shortcode');\n        if (fieldIdValue) {\n            fieldIdValue.select();\n            document.execCommand(\"copy\");\n        }\n        //show the copied message\n        $(this).parents('.tf-copy-item').append('<div><span class=\"tf-copied-msg\">Copied<span></div>');\n        $(\"span.tf-copied-msg\").animate({ opacity: 0 }, 1000, function () {\n            $(this).slideUp('slow', function () {\n                $(this).remove();\n            });\n        });\n    });\n\n\n\n})(jQuery);\n\n\n\n//# sourceURL=webpack://uacf7/./sass/admin/js/free/uacf7-options.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_modules__["./sass/admin/js/free/admin.js"]();
/******/ 	__webpack_modules__["./sass/admin/js/free/required-taxonomies-gutenberg.js"]();
/******/ 	__webpack_modules__["./sass/admin/js/free/required-taxonomies.js"]();
/******/ 	__webpack_modules__["./sass/admin/js/free/setup-wizard.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./sass/admin/js/free/uacf7-options.js"]();
/******/ 	
/******/ })()
;